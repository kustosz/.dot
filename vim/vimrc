set nocompatible

set mouse=a

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/syntastic'
Plugin 'tomtom/tlib_vim'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'garbas/vim-snipmate'
Plugin 'L9'
Plugin 'FuzzyFinder'
Plugin 'Shougo/vimproc.vim'
Plugin 'godlygeek/tabular'
Plugin 'ervandew/supertab'
Plugin 'Shougo/neocomplete'

" Haskell
Plugin 'raichoo/haskell-vim'
Plugin 'eagletmt/ghcmod-vim'
Plugin 'eagletmt/neco-ghc'
Plugin 'Twinside/vim-hoogle'

call vundle#end()

let mapleader=","      "Set the best leader
set encoding=utf-8     "Set encoding
set hidden             "Better buffer behavior

" Look and feel
set number
set ruler
syntax on

" Whitespace stuff
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set list listchars=tab:\ \ ,trail:Â·
set smarttab

au BufNewFile,BufRead *.go setlocal noet ts=4 sw=4 sts=4


" Remove all trailing whitespace
autocmd FileType c,cpp,php,rb,py autocmd BufWritePre * :%s/\s\+$//e

" Smoother scrolling
set scrolloff=3
nnoremap <Space> <C-d>

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Completion
set completeopt=menuone,menu,longest


" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*

" Allow backspacing over everything in insert mode
set backspace=indent,eol,start

" Load the plugin and indent settings for the detected filetype
filetype plugin indent on

set ai
set si

" Directories for swp files
set backupdir=~/.vim/backup
set directory=~/.vim/backup

" Show (partial) command in the status line
set showcmd

" Escaping from insert mode
inoremap jj <ESC>

" FuzzyFinder configuration
map <Leader>n :FufFileWithCurrentBufferDir<CR>
map <Leader>b :FufBuffer<CR>
map <Leader>t :FufBufferTag<CR>

" NERDtree config
autocmd vimenter * if !argc() | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

"Tabbing for ruby
autocmd FileType ruby,coffee,js,erb setlocal shiftwidth=2 tabstop=2 softtabstop=2

nnoremap  Z i<CR><ESC>k$

"syntastic

"map <Leader>s :SyntasticToggleMode<CR>

"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 0
"let g:syntastic_check_on_open = 0
"let g:syntastic_check_on_wq = 0

map <silent> <Leader>tw :GhcModTypeInsert<CR>
map <silent> <Leader>ts :GhcModSplitFunCase<CR>
map <silent> <Leader>tq :GhcModType<CR>
map <silent> <Leader>te :GhcModTypeClear<CR>
